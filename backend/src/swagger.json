{
  "openapi": "3.0.3",
  "info": {
    "title": "Investment Viewer",
    "description": "API description",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "apiteam@swagger.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "User API endpoint description"
    },
    {
      "name": "auth",
      "description": "Authentication API endpoint description"
    }
  ],
  "paths": {
    "/user/recoveryPassword": {
      "patch": {
        "tags": ["user"],
        "summary": "Recover password",
        "description": "Recover user's password with a valid recovery code and set a new password.",
        "operationId": "recoveryPassword",
        "requestBody": {
          "description": "User password recovery data",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "recoveryCode": {
                    "type": "string",
                    "example": "your-recovery-code"
                  },
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "newPassword": {
                    "type": "string",
                    "example": "new-password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password recovered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Password updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid recovery data"
          },
          "404": {
            "description": "User not found or recovery code expired"
          }
        }
      }
    },
    "/user": {
      "put": {
        "tags": ["user"],
        "summary": "Update user",
        "description": "Update a user.",
        "operationId": "updateUser",
        "requestBody": {
          "description": "User object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, user data is not valid"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "tags": ["auth"],
        "summary": "Create user",
        "description": "Create a new user.",
        "operationId": "createUser",
        "requestBody": {
          "description": "User object that needs to be created",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, user data is not valid"
          },
          "409": {
            "description": "Conflict, user with the same email already exists"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": ["auth"],
        "summary": "Log in user",
        "description": "Log in a user with valid credentials.",
        "operationId": "loginUser",
        "requestBody": {
          "description": "User login credentials",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string",
                    "example": "john@example.com"
                  },
                  "password": {
                    "type": "string",
                    "example": "password123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "token": {
                      "type": "string",
                      "example": "your-access-token"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized, invalid credentials"
          }
        }
      }
    },
    "/auth/recoveryCode": {
      "get": {
        "tags": ["auth"],
        "summary": "Get recovery code",
        "description": "Get a recovery code to reset the user's password.",
        "operationId": "getRecoveryCode",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "description": "The user's email for password recovery",
            "required": true,
            "schema": {
              "type": "string",
              "format": "email"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Recovery code sent successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "123456"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, invalid email format"
          },
          "404": {
            "description": "User not found or recovery code expired"
          }
        }
      }
    },
    "/stock/getCategories": {
      "get": {
        "tags": ["stock"],
        "summary": "Create a new stock",
        "description": "Create a new stock entry.",
        "operationId": "createStock",
        "requestBody": {
          "description": "Stock object that needs to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Stock created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewStock"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, stock data is not valid"
          },
          "401": {
            "description": "Unauthorized, invalid token"
          },
          "404": {
            "description": "User not found or category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    },
    "/stock": {
      "post": {
        "tags": ["stock"],
        "summary": "Create a new stock",
        "description": "Create a new stock entry.",
        "operationId": "createStock",
        "requestBody": {
          "description": "Stock object that needs to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Stock created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewStock"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, stock data is not valid"
          },
          "401": {
            "description": "Unauthorized, invalid token"
          },
          "404": {
            "description": "User not found or category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "put": {
        "tags": ["stock"],
        "summary": "Create a new stock",
        "description": "Create a new stock entry.",
        "operationId": "createStock",
        "requestBody": {
          "description": "Stock object that needs to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Stock created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewStock"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, stock data is not valid"
          },
          "401": {
            "description": "Unauthorized, invalid token"
          },
          "404": {
            "description": "User not found or category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "get": {
        "tags": ["stock"],
        "summary": "Create a new stock",
        "description": "Create a new stock entry.",
        "operationId": "createStock",
        "requestBody": {
          "description": "Stock object that needs to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Stock created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewStock"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, stock data is not valid"
          },
          "401": {
            "description": "Unauthorized, invalid token"
          },
          "404": {
            "description": "User not found or category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      },
      "delete": {
        "tags": ["stock"],
        "summary": "Create a new stock",
        "description": "Create a new stock entry.",
        "operationId": "createStock",
        "requestBody": {
          "description": "Stock object that needs to be created",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StockType"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Stock created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewStock"
                }
              }
            }
          },
          "400": {
            "description": "Bad request, stock data is not valid"
          },
          "401": {
            "description": "Unauthorized, invalid token"
          },
          "404": {
            "description": "User not found or category not found"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "security": [
          {
            "BearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "64decdee3c5d467891b2e789"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "type": "string",
            "example": "john@example.com"
          },
          "password": {
            "type": "string",
            "example": "$2b$12$mCuPCv/D6cj/2vfXDAT79.sWsVrW4avKl9MFv1sHpvTZeXcXhN/wW"
          }
        },
        "xml": {
          "name": "user"
        }
      },
      "RecoveryCode": {
        "type": "string",
        "example": "123456"
      },
      "StockType": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "example": 100
          },
          "buyValue": {
            "type": "number",
            "example": 111.11
          },
          "category": {
            "type": "string",
            "example": "CategoryName"
          },
          "refName": {
            "type": "string",
            "example": "StockName"
          },
          "userId": {
            "type": "string",
            "example": "64decdee3c5d467891b2e789"
          },
          "subCategory": {
            "type": "string",
            "example": "SubCategoryName"
          }
        },
        "required": ["amount", "buyValue", "category", "refName", "userId"]
      },
      "NewStock": {
        "type": "object",
        "properties": {
          "newStock": {
            "$ref": "#/components/schemas/Stock"
          }
        }
      },
      "Stock": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number",
            "example": 100
          },
          "buyValue": {
            "type": "number",
            "example": 111.11
          },
          "category": {
            "type": "string",
            "example": "CategoryName"
          },
          "currentValue": {
            "type": "number",
            "example": 111.11
          },
          "dividendYear": {
            "type": "number",
            "example": 1
          },
          "fullName": {
            "type": "string",
            "example": "Stock Full Name"
          },
          "realValue": {
            "type": "number",
            "example": 0.091
          },
          "refName": {
            "type": "string",
            "example": "StockName"
          },
          "authorId": {
            "type": "string",
            "example": "64decdee3c5d467891b2e789"
          },
          "image": {
            "type": "string",
            "example": "https://image.png"
          },
          "subCategory": {
            "type": "string",
            "example": "SubCategoryName"
          }
        }
      }
    }
  }
}
